{"ast":null,"code":"import _slicedToArray from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/olof/sata-hakaton/front/src/pages/Products/CompanyGroup/CompanyGroup.tsx\";\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport { min, reduce } from 'ramda';\nimport './CompanyGroup.css';\nimport Stars from '../../../common/Starts';\nimport { numberWithSpaces } from '../../../utils';\nexport default function CompanyGroup({\n  title,\n  type: companyType\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isActive = _useState2[0],\n        setIsActive = _useState2[1];\n\n  const price = 35000;\n  const list = [{\n    title: `ООО \"Cварка мастер\"`,\n    ration: 2,\n    price: 35000,\n    location: 'Москва',\n    type: 0\n  }, {\n    title: `ООО \"Молдова Svarka\"`,\n    ration: 5,\n    price: 60000,\n    location: 'Москва',\n    type: 0\n  }, {\n    title: `ООО \"Сварка экспресс\"`,\n    ration: 1,\n    price: 33000,\n    location: 'Владимир',\n    type: 0\n  }, {\n    title: `ИП Иванова`,\n    ration: 2,\n    price: 89000,\n    location: 'Москва',\n    type: 1\n  }, {\n    title: `Красавица`,\n    ration: 5,\n    price: 77000,\n    location: 'Санкт-петербург',\n    type: 2\n  }, {\n    title: `ИП Сережа`,\n    ration: 1,\n    price: 30000,\n    location: 'Владимир',\n    type: 1\n  }];\n\n  const minPrice = type => reduce(min, Infinity, list.filter(c => c.type === type).map(i => i.price));\n\n  return React.createElement(\"div\", {\n    className: cn('company-group', isActive && 'company-group_active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"company-group__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, title, price > minPrice(companyType) && React.createElement(\"span\", {\n    className: \"company-group__better-offer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u043B\\u0443\\u0447\\u0448\\u0435\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\", React.createElement(\"span\", {\n    className: \"company-group__better-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, numberWithSpaces(minPrice(companyType)), \" \\u20BD\"))), React.createElement(\"div\", {\n    className: cn(\"company-group__list\", isActive && 'company-group__list_active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, list.filter(c => c.type === companyType).map(company => React.createElement(Company, {\n    company: company,\n    key: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"company-group__spoiler\",\n    onClick: () => setIsActive(!isActive),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, isActive ? 'Меньше' : 'Больше'));\n}\n\nfunction Company({\n  company\n}) {\n  const title = company.title,\n        location = company.location,\n        price = company.price,\n        ration = company.ration;\n  return React.createElement(\"div\", {\n    className: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"offer__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, title), React.createElement(Stars, {\n    ration: ration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"company__price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, numberWithSpaces(price)), React.createElement(\"div\", {\n    className: \"company__location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, location), React.createElement(\"div\", {\n    className: \"company__location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\u041D\\u0430\\u0434\\u0451\\u0436\\u043D\\u044B\\u0439 \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\"));\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/pages/Products/CompanyGroup/CompanyGroup.tsx"],"names":["React","useState","cn","min","reduce","Stars","numberWithSpaces","CompanyGroup","title","type","companyType","isActive","setIsActive","price","list","ration","location","minPrice","Infinity","filter","c","map","i","company","Company"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport cn from 'classnames'\nimport {min, reduce} from 'ramda'\n\nimport './CompanyGroup.css'\nimport Stars from '../../../common/Starts'\nimport { numberWithSpaces } from '../../../utils'\n\n\nexport default function CompanyGroup({title, type: companyType}: {title: string, type: number}) {\n    const [ isActive, setIsActive ] = useState(false)\n    const price = 35000\n    const list = [\n        {title: `ООО \"Cварка мастер\"`, ration: 2, price: 35000, location: 'Москва', type: 0},\n        {title: `ООО \"Молдова Svarka\"`, ration: 5, price: 60000, location: 'Москва', type: 0},\n        {title: `ООО \"Сварка экспресс\"`, ration: 1, price: 33000, location: 'Владимир', type: 0},\n        {title: `ИП Иванова`, ration: 2, price: 89000, location: 'Москва', type: 1},\n        {title: `Красавица`, ration: 5, price: 77000, location: 'Санкт-петербург', type: 2},\n        {title: `ИП Сережа`, ration: 1, price: 30000, location: 'Владимир', type: 1},\n    ]\n    const minPrice : any = (type: number) => reduce(min, Infinity, list.filter((c) => c.type === type).map((i) => i.price))\n    return (\n        <div className={ cn('company-group', isActive && 'company-group_active') }>\n            <div className=\"company-group__title\">\n                {title}\n                {price > minPrice(companyType) && (\n                    <span className=\"company-group__better-offer\">\n                        лучшее предложение\n                        <span className=\"company-group__better-price\">{numberWithSpaces(minPrice(companyType))} ₽</span>\n                    </span>) }\n            </div>\n            <div className={cn(\"company-group__list\", isActive && 'company-group__list_active')}>\n                {list.filter((c) => c.type === companyType).map((company) => (\n                    <Company company={company} key={title}/>\n                ))}\n            </div>\n            <div className=\"company-group__spoiler\" onClick={ () => setIsActive(!isActive) }>\n                {isActive ? 'Меньше' : 'Больше'}\n            </div>\n        </div>\n    )\n}\n\ninterface CompanyProps {\n    title: string\n    ration: number\n    price: number\n    location: string\n}\n\nfunction Company({company}: {company: CompanyProps}) {\n    const {title, location, price, ration} = company\n    return (\n        <div className=\"company\">\n            <div className=\"offer__name\">{title}</div>\n            <Stars ration={ration}/>\n            <div className=\"company__price\">{numberWithSpaces(price)}</div>\n            <div className=\"company__location\">{location}</div>\n            <div className=\"company__location\">Надёжный контрагент</div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}