{"ast":null,"code":"var _jsxFileName = \"/home/olof/sata-hakaton/src/pages/Product/Product.tsx\";\nimport React from 'react';\nimport { isNil } from 'ramda';\nimport { withRouter } from 'react-router-dom';\nimport './Product.css';\nimport { MAX_ID } from '../../constants';\nimport { NotFound } from '../NotFound';\n\nfunction Product({\n  match: {\n    params\n  }\n}) {\n  const productId = params.productId,\n        companyId = params.companyId;\n  console.log('sss', productId, companyId);\n  const name = 'название товара';\n  const companyName = 'название компании'; // let isValidParams = false\n  // if (isNil(productId) || isNil(companyId)) {\n  //     return <NotFound/>\n  // }\n  // const parsedProductId = parseId(productId)\n\n  const isValidParams = () => {\n    if (isNil(productId) || isNil(companyId)) {\n      return false;\n    }\n\n    const parsedProductId = parseId(productId);\n    const parsedCompanyId = parseId(companyId);\n    return !(isNil(parsedProductId) || isNil(parsedCompanyId));\n  };\n\n  if (!isValidParams()) {\n    return React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" \", name, \" \"), React.createElement(\"div\", {\n    className: \"product__company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", companyName, \" \"), React.createElement(\"div\", {\n    className: \"product__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" \"), React.createElement(\"div\", {\n    className: \"similar-products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nfunction parseId(value) {\n  const parseId = parseInt(value);\n\n  if (!isNaN(parseId) && parseId < MAX_ID) {\n    return parseId;\n  }\n\n  return null;\n}\n\nexport default withRouter(Product);","map":{"version":3,"sources":["/home/olof/sata-hakaton/src/pages/Product/Product.tsx"],"names":["React","isNil","withRouter","MAX_ID","NotFound","Product","match","params","productId","companyId","console","log","name","companyName","isValidParams","parsedProductId","parseId","parsedCompanyId","value","parseInt","isNaN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAA8BC,UAA9B,QAAgD,kBAAhD;AAEA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAMA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAjB,EAA+C;AAAA,QACnCC,SADmC,GACVD,MADU,CACnCC,SADmC;AAAA,QACxBC,SADwB,GACVF,MADU,CACxBE,SADwB;AAG3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,SAAnB,EAA8BC,SAA9B;AACA,QAAMG,IAAI,GAAG,iBAAb;AACA,QAAMC,WAAW,GAAG,mBAApB,CAL2C,CAO3C;AACA;AACA;AACA;AACA;;AACA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIb,KAAK,CAACO,SAAD,CAAL,IAAoBP,KAAK,CAACQ,SAAD,CAA7B,EAA0C;AACtC,aAAO,KAAP;AACH;;AACD,UAAMM,eAAe,GAAGC,OAAO,CAACR,SAAD,CAA/B;AACA,UAAMS,eAAe,GAAGD,OAAO,CAACP,SAAD,CAA/B;AACA,WAAO,EAAER,KAAK,CAACc,eAAD,CAAL,IAA0Bd,KAAK,CAACgB,eAAD,CAAjC,CAAP;AACH,GAPD;;AASA,MAAI,CAACH,aAAa,EAAlB,EAAsB;AAClB,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCF,IAAlC,MADJ,EAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCC,WAApC,MAFJ,EAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH;;AAED,SAASG,OAAT,CAAiBE,KAAjB,EAAgC;AAC5B,QAAMF,OAAO,GAAGG,QAAQ,CAACD,KAAD,CAAxB;;AACA,MAAI,CAACE,KAAK,CAACJ,OAAD,CAAN,IAAmBA,OAAO,GAAGb,MAAjC,EAAyC;AACrC,WAAOa,OAAP;AACH;;AACD,SAAO,IAAP;AACH;;AACD,eAAed,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { isNil } from 'ramda'\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport './Product.css'\nimport { MAX_ID } from '../../constants'\nimport { NotFound } from '../NotFound'\n\n\ninterface Props extends RouteComponentProps<{ productId?: string, companyId?: string }> {\n}\n\nfunction Product({ match: { params } }: Props) {\n    const { productId, companyId } = params\n\n    console.log('sss', productId, companyId)\n    const name = 'название товара'\n    const companyName = 'название компании'\n\n    // let isValidParams = false\n    // if (isNil(productId) || isNil(companyId)) {\n    //     return <NotFound/>\n    // }\n    // const parsedProductId = parseId(productId)\n    const isValidParams = () => {\n        if (isNil(productId) || isNil(companyId)) {\n            return false\n        }\n        const parsedProductId = parseId(productId)\n        const parsedCompanyId = parseId(companyId)\n        return !(isNil(parsedProductId) || isNil(parsedCompanyId))\n    }\n\n    if (!isValidParams()) {\n        return <NotFound/>\n    }\n    return (\n        <div className=\"product\">\n            <div className=\"product__title\"> {name} </div>\n            <div className=\"product__company\"> {companyName} </div>\n\n            <div className=\"product__img\"> </div>\n            <div className=\"similar-products\">\n            </div>\n        </div>\n    )\n}\n\nfunction parseId(value: string) {\n    const parseId = parseInt(value)\n    if (!isNaN(parseId) && parseId < MAX_ID) {\n        return parseId\n    }\n    return null\n}\nexport default withRouter(Product)"]},"metadata":{},"sourceType":"module"}