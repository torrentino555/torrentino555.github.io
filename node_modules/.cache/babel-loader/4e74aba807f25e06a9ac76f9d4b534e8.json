{"ast":null,"code":"import { isNil, sort } from 'ramda';\nexport function selectCheapestAndRecommendedOffer(state) {\n  const offers = state.product.similarProducts;\n  const currentPrice = state.product.price;\n\n  if (isNil(offers) || offers.length === 0 || isNil(currentPrice)) {\n    return {};\n  }\n\n  const cheapests = sort((first, second) => first.price - second.price, offers.filter(item => item.price < currentPrice));\n\n  if (cheapests.length === 0) {\n    return {};\n  }\n\n  const cheapest = cheapests[0];\n  cheapest.features = [cheapest.trust];\n\n  if (cheapest.clientCount > 0) {\n    cheapest.features.push(cheapest.clientCount);\n  }\n\n  if (!isNil(cheapest.isProtectedDeal)) {\n    cheapest.features.push(cheapest.isProtectedDeal ? 'Без риска' : 'Есть риск');\n  }\n\n  cheapest.description = cheapest.productDescription;\n  cheapest.name = cheapest.organizationName;\n  const recommendeds = sort((first, second) => second.score - first.score, offers.filter(item => item.positionId !== cheapest.positionId));\n\n  if (recommendeds.length === 0) {\n    return {};\n  }\n\n  const recommended = recommendeds[0];\n  recommended.features = [recommended.trust];\n\n  if (recommended.clientCount > 0) {\n    recommended.features.push(recommended.clientCount);\n  }\n\n  if (!isNil(recommended.isProtectedDeal)) {\n    recommended.features.push(recommended.isProtectedDeal ? 'Без риска' : 'Есть риск');\n  }\n\n  recommended.description = recommended.productDescription;\n  recommended.name = recommended.organizationName;\n  return {\n    cheapest,\n    recommended\n  };\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/selectors/product.ts"],"names":["isNil","sort","selectCheapestAndRecommendedOffer","state","offers","product","similarProducts","currentPrice","price","length","cheapests","first","second","filter","item","cheapest","features","trust","clientCount","push","isProtectedDeal","description","productDescription","name","organizationName","recommendeds","score","positionId","recommended"],"mappings":"AACA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,OAA5B;AAGA,OAAO,SAASC,iCAAT,CAA2CC,KAA3C,EAAyD;AAC5D,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAAN,CAAcC,eAA7B;AACA,QAAMC,YAAY,GAAGJ,KAAK,CAACE,OAAN,CAAcG,KAAnC;;AAEA,MAAIR,KAAK,CAACI,MAAD,CAAL,IAAiBA,MAAM,CAACK,MAAP,KAAkB,CAAnC,IAAwCT,KAAK,CAACO,YAAD,CAAjD,EAAiE;AAC7D,WAAO,EAAP;AACH;;AAED,QAAMG,SAAS,GAAGT,IAAI,CAClB,CAACU,KAAD,EAA2BC,MAA3B,KAAyDD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAD5D,EAElBJ,MAAM,CAACS,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACN,KAAL,GAAaD,YAAnC,CAFkB,CAAtB;;AAKA,MAAIG,SAAS,CAACD,MAAV,KAAqB,CAAzB,EAA4B;AACxB,WAAO,EAAP;AACH;;AAED,QAAMM,QAAc,GAAGL,SAAS,CAAC,CAAD,CAAhC;AAEAK,EAAAA,QAAQ,CAACC,QAAT,GAAoB,CAAED,QAAQ,CAACE,KAAX,CAApB;;AACA,MAAIF,QAAQ,CAACG,WAAT,GAAuB,CAA3B,EAA8B;AAC1BH,IAAAA,QAAQ,CAACC,QAAT,CAAkBG,IAAlB,CAAuBJ,QAAQ,CAACG,WAAhC;AACH;;AACD,MAAI,CAAClB,KAAK,CAACe,QAAQ,CAACK,eAAV,CAAV,EAAsC;AAClCL,IAAAA,QAAQ,CAACC,QAAT,CAAkBG,IAAlB,CAAuBJ,QAAQ,CAACK,eAAT,GAA2B,WAA3B,GAAyC,WAAhE;AACH;;AACDL,EAAAA,QAAQ,CAACM,WAAT,GAAuBN,QAAQ,CAACO,kBAAhC;AACAP,EAAAA,QAAQ,CAACQ,IAAT,GAAgBR,QAAQ,CAACS,gBAAzB;AAEA,QAAMC,YAAY,GAAGxB,IAAI,CACrB,CAACU,KAAD,EAA2BC,MAA3B,KAAyDA,MAAM,CAACc,KAAP,GAAef,KAAK,CAACe,KADzD,EAErBtB,MAAM,CAACS,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACa,UAAL,KAAoBZ,QAAQ,CAACY,UAAnD,CAFqB,CAAzB;;AAKA,MAAIF,YAAY,CAAChB,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,WAAO,EAAP;AACH;;AAED,QAAMmB,WAAiB,GAAGH,YAAY,CAAC,CAAD,CAAtC;AAEAG,EAAAA,WAAW,CAACZ,QAAZ,GAAuB,CAAEY,WAAW,CAACX,KAAd,CAAvB;;AACA,MAAIW,WAAW,CAACV,WAAZ,GAA0B,CAA9B,EAAiC;AAC7BU,IAAAA,WAAW,CAACZ,QAAZ,CAAqBG,IAArB,CAA0BS,WAAW,CAACV,WAAtC;AACH;;AACD,MAAI,CAAClB,KAAK,CAAC4B,WAAW,CAACR,eAAb,CAAV,EAAyC;AACrCQ,IAAAA,WAAW,CAACZ,QAAZ,CAAqBG,IAArB,CAA0BS,WAAW,CAACR,eAAZ,GAA8B,WAA9B,GAA4C,WAAtE;AACH;;AACDQ,EAAAA,WAAW,CAACP,WAAZ,GAA0BO,WAAW,CAACN,kBAAtC;AACAM,EAAAA,WAAW,CAACL,IAAZ,GAAmBK,WAAW,CAACJ,gBAA/B;AAEA,SAAO;AAAET,IAAAA,QAAF;AAAYa,IAAAA;AAAZ,GAAP;AACH","sourcesContent":["import { State } from '../reducers'\nimport { isNil, sort } from 'ramda'\n\n\nexport function selectCheapestAndRecommendedOffer(state: State) {\n    const offers = state.product.similarProducts\n    const currentPrice = state.product.price\n\n    if (isNil(offers) || offers.length === 0 || isNil(currentPrice)) {\n        return {}\n    }\n\n    const cheapests = sort(\n        (first: { price: number }, second: { price: number }) => first.price - second.price,\n        offers.filter(item => item.price < currentPrice)\n    )\n\n    if (cheapests.length === 0) {\n        return {}\n    }\n\n    const cheapest : any = cheapests[0]\n\n    cheapest.features = [ cheapest.trust ]\n    if (cheapest.clientCount > 0) {\n        cheapest.features.push(cheapest.clientCount)\n    }\n    if (!isNil(cheapest.isProtectedDeal)) {\n        cheapest.features.push(cheapest.isProtectedDeal ? 'Без риска' : 'Есть риск')\n    }\n    cheapest.description = cheapest.productDescription\n    cheapest.name = cheapest.organizationName\n\n    const recommendeds = sort(\n        (first: { score: number }, second: { score: number }) => second.score - first.score,\n        offers.filter(item => item.positionId !== cheapest.positionId)\n    )\n\n    if (recommendeds.length === 0) {\n        return {}\n    }\n\n    const recommended : any = recommendeds[0]\n\n    recommended.features = [ recommended.trust ]\n    if (recommended.clientCount > 0) {\n        recommended.features.push(recommended.clientCount)\n    }\n    if (!isNil(recommended.isProtectedDeal)) {\n        recommended.features.push(recommended.isProtectedDeal ? 'Без риска' : 'Есть риск')\n    }\n    recommended.description = recommended.productDescription\n    recommended.name = recommended.organizationName\n\n    return { cheapest, recommended }\n}"]},"metadata":{},"sourceType":"module"}