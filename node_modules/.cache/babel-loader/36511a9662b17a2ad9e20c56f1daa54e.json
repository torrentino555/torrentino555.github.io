{"ast":null,"code":"import _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createReducer } from 'redux-from-void';\nimport { searching } from '../actions';\nconst initialState = {\n  positions: []\n};\nexport default createReducer(initialState)(searching.success, (_, {\n  payload\n}) => _objectSpread({}, payload));","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/reducers/Search.ts"],"names":["createReducer","searching","initialState","positions","success","_","payload"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAOA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,SAAS,EAAE;AADoB,CAAnC;AAIA,eAAeH,aAAa,CAACE,YAAD,CAAb,CACXD,SAAS,CAACG,OADC,EAEX,CAACC,CAAD,EAAS;AAAEC,EAAAA;AAAF,CAAT,uBACOA,OADP,CAFW,CAAf","sourcesContent":["import { createReducer } from 'redux-from-void'\nimport { ProductType, ResponseProductDTO, TrustLevel } from '../dto/Product'\nimport { searching } from '../actions'\n\n\nexport interface SearchState {\n    positions: ResponseProductDTO[]\n}\n\nconst initialState : SearchState = {\n    positions: []\n}\n\nexport default createReducer(initialState)(\n    searching.success,\n    (_: any, { payload } : { payload: any }) => ({\n        ...payload\n    }),\n)"]},"metadata":{},"sourceType":"module"}