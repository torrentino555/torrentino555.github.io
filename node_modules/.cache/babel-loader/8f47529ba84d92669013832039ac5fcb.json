{"ast":null,"code":"import { isNil, sort } from 'ramda';\nimport { selectLocation } from './routes';\nexport function selectCheapestAndRecommendedOffer(state) {\n  const offers = state.product.similarProducts;\n  const location = selectLocation(state);\n\n  if (isNil(offers) || offers.length === 0) {\n    return {};\n  }\n\n  const cheapest = sort((first, second) => first.price - second.price, offers)[0];\n  cheapest.features = [cheapest.trust];\n\n  if (cheapest.clientCount > 0) {\n    cheapest.features.push(cheapest.clientCount);\n  }\n\n  if (!isNil(cheapest.isProtectedDeal)) {\n    cheapest.features.push(cheapest.isProtectedDeal ? 'Без риска' : 'Есть риск');\n  }\n\n  cheapest.description = cheapest.productDescription;\n  cheapest.name = cheapest.organizationName;\n  const recommended = sort((first, second) => second.score - first.score, offers)[0];\n  recommended.features = [recommended.trust];\n\n  if (recommended.clientCount > 0) {\n    recommended.features.push(recommended.clientCount);\n  }\n\n  if (!isNil(recommended.isProtectedDeal)) {\n    recommended.features.push(recommended.isProtectedDeal ? 'Без риска' : 'Есть риск');\n  }\n\n  recommended.description = recommended.productDescription;\n  recommended.name = recommended.organizationName;\n  return {\n    cheapest,\n    recommended\n  };\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/selectors/product.ts"],"names":["isNil","sort","selectLocation","selectCheapestAndRecommendedOffer","state","offers","product","similarProducts","location","length","cheapest","first","second","price","features","trust","clientCount","push","isProtectedDeal","description","productDescription","name","organizationName","recommended","score"],"mappings":"AACA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,OAA5B;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAGA,OAAO,SAASC,iCAAT,CAA2CC,KAA3C,EAAyD;AAC5D,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAAN,CAAcC,eAA7B;AAEA,QAAMC,QAAQ,GAAGN,cAAc,CAACE,KAAD,CAA/B;;AAGA,MAAIJ,KAAK,CAACK,MAAD,CAAL,IAAiBA,MAAM,CAACI,MAAP,KAAkB,CAAvC,EAA0C;AACtC,WAAO,EAAP;AACH;;AAED,QAAMC,QAAc,GAAGT,IAAI,CAAC,CAACU,KAAD,EAA2BC,MAA3B,KAAyDD,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACC,KAA/E,EAAsFR,MAAtF,CAAJ,CAAkG,CAAlG,CAAvB;AAEAK,EAAAA,QAAQ,CAACI,QAAT,GAAoB,CAAEJ,QAAQ,CAACK,KAAX,CAApB;;AACA,MAAIL,QAAQ,CAACM,WAAT,GAAuB,CAA3B,EAA8B;AAC1BN,IAAAA,QAAQ,CAACI,QAAT,CAAkBG,IAAlB,CAAuBP,QAAQ,CAACM,WAAhC;AACH;;AACD,MAAI,CAAChB,KAAK,CAACU,QAAQ,CAACQ,eAAV,CAAV,EAAsC;AAClCR,IAAAA,QAAQ,CAACI,QAAT,CAAkBG,IAAlB,CAAuBP,QAAQ,CAACQ,eAAT,GAA2B,WAA3B,GAAyC,WAAhE;AACH;;AACDR,EAAAA,QAAQ,CAACS,WAAT,GAAuBT,QAAQ,CAACU,kBAAhC;AACAV,EAAAA,QAAQ,CAACW,IAAT,GAAgBX,QAAQ,CAACY,gBAAzB;AAEA,QAAMC,WAAiB,GAAGtB,IAAI,CAAC,CAACU,KAAD,EAA2BC,MAA3B,KAAyDA,MAAM,CAACY,KAAP,GAAeb,KAAK,CAACa,KAA/E,EAAsFnB,MAAtF,CAAJ,CAAkG,CAAlG,CAA1B;AACAkB,EAAAA,WAAW,CAACT,QAAZ,GAAuB,CAAES,WAAW,CAACR,KAAd,CAAvB;;AACA,MAAIQ,WAAW,CAACP,WAAZ,GAA0B,CAA9B,EAAiC;AAC7BO,IAAAA,WAAW,CAACT,QAAZ,CAAqBG,IAArB,CAA0BM,WAAW,CAACP,WAAtC;AACH;;AACD,MAAI,CAAChB,KAAK,CAACuB,WAAW,CAACL,eAAb,CAAV,EAAyC;AACrCK,IAAAA,WAAW,CAACT,QAAZ,CAAqBG,IAArB,CAA0BM,WAAW,CAACL,eAAZ,GAA8B,WAA9B,GAA4C,WAAtE;AACH;;AACDK,EAAAA,WAAW,CAACJ,WAAZ,GAA0BI,WAAW,CAACH,kBAAtC;AACAG,EAAAA,WAAW,CAACF,IAAZ,GAAmBE,WAAW,CAACD,gBAA/B;AAEA,SAAO;AAAEZ,IAAAA,QAAF;AAAYa,IAAAA;AAAZ,GAAP;AACH","sourcesContent":["import { State } from '../reducers'\nimport { isNil, sort } from 'ramda'\nimport { useSelector } from 'react-redux'\nimport { selectLocation } from './routes'\n\n\nexport function selectCheapestAndRecommendedOffer(state: State) {\n    const offers = state.product.similarProducts\n\n    const location = selectLocation(state)\n\n\n    if (isNil(offers) || offers.length === 0) {\n        return {}\n    }\n\n    const cheapest : any = sort((first: { price: number }, second: { price: number }) => first.price - second.price, offers)[0]\n\n    cheapest.features = [ cheapest.trust ]\n    if (cheapest.clientCount > 0) {\n        cheapest.features.push(cheapest.clientCount)\n    }\n    if (!isNil(cheapest.isProtectedDeal)) {\n        cheapest.features.push(cheapest.isProtectedDeal ? 'Без риска' : 'Есть риск')\n    }\n    cheapest.description = cheapest.productDescription\n    cheapest.name = cheapest.organizationName\n\n    const recommended : any = sort((first: { score: number }, second: { score: number }) => second.score - first.score, offers)[0]\n    recommended.features = [ recommended.trust ]\n    if (recommended.clientCount > 0) {\n        recommended.features.push(recommended.clientCount)\n    }\n    if (!isNil(recommended.isProtectedDeal)) {\n        recommended.features.push(recommended.isProtectedDeal ? 'Без риска' : 'Есть риск')\n    }\n    recommended.description = recommended.productDescription\n    recommended.name = recommended.organizationName\n\n    return { cheapest, recommended }\n}"]},"metadata":{},"sourceType":"module"}