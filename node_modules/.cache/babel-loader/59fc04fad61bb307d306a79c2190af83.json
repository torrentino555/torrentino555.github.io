{"ast":null,"code":"import _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { call } from 'redux-saga/effects';\nimport * as api from '../api';\nimport * as actions from '../actions';\nexport function* productInitialized({\n  payload: positionId\n}) {\n  try {\n    const response = yield call(api.getProduct, {\n      positionId\n    });\n    debugger; // assertResponse(response)\n    // const similarProducts = yield call(api.getSimilarProductOffers,  { positionId, currentOrganizationId: response.organizationId })\n    // assertResponse(similarProducts)\n\n    yield call(actions.productInitialized.success, _objectSpread({}, response, {\n      similarProducts: null\n    }));\n  } catch (_ref) {\n    let message = _ref.message;\n    yield call(actions.errorHandle.occur, message);\n  } finally {}\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/sagas/product.ts"],"names":["call","api","actions","productInitialized","payload","positionId","response","getProduct","success","similarProducts","message","errorHandle","occur"],"mappings":";AAAA,SAASA,IAAT,QAA0C,oBAA1C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAKA,OAAO,UAAWC,kBAAX,CAA8B;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAA9B,EAA4D;AAC/D,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACC,GAAG,CAACM,UAAL,EAAiB;AAAEF,MAAAA;AAAF,KAAjB,CAA3B;AAEA,aAHA,CAKA;AAEA;AAEA;;AAEA,UAAML,IAAI,CAACE,OAAO,CAACC,kBAAR,CAA2BK,OAA5B,oBAA0CF,QAA1C;AAAoDG,MAAAA,eAAe,EAAE;AAArE,OAAV;AACH,GAZD,CAYE,aAAoB;AAAA,QAAXC,OAAW,QAAXA,OAAW;AAClB,UAAMV,IAAI,CAACE,OAAO,CAACS,WAAR,CAAoBC,KAArB,EAA4BF,OAA5B,CAAV;AACH,GAdD,SAcU,CACT;AACJ","sourcesContent":["import { call, fork, cancel, delay } from 'redux-saga/effects'\n\nimport * as api from '../api'\nimport * as actions from '../actions'\nimport { assertResponse } from '../errorHandling'\nimport { debuglog } from 'util'\n\n\nexport function * productInitialized({ payload: positionId }: any) {\n    try {\n        const response = yield call(api.getProduct, { positionId })\n\n        debugger\n\n        // assertResponse(response)\n\n        // const similarProducts = yield call(api.getSimilarProductOffers,  { positionId, currentOrganizationId: response.organizationId })\n\n        // assertResponse(similarProducts)\n\n        yield call(actions.productInitialized.success, { ...response, similarProducts: null })\n    } catch ({ message }) {\n        yield call(actions.errorHandle.occur, message)\n    } finally {\n    }\n}"]},"metadata":{},"sourceType":"module"}