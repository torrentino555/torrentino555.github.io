{"ast":null,"code":"import _objectWithoutProperties from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { TrustLevel } from '../dto/Product';\nexport function mapSearchToRedux(searchObj) {\n  return searchObj;\n}\nexport function mapSimilarProductsToRedux(positions) {\n  return positions.map(item => _objectSpread({}, item, {\n    imageSrc: item.productImageSrc,\n    isProtectedDeal: item.protectedDeal,\n    trust: mapTrustToTrustLevel(item.trust)\n  }));\n}\nexport function mapProductToRedux(_ref) {\n  let trust = _ref.trust,\n      protectedDeal = _ref.protectedDeal,\n      rest = _objectWithoutProperties(_ref, [\"trust\", \"protectedDeal\"]);\n\n  return _objectSpread({}, rest, {\n    isProtectedDeal: protectedDeal,\n    trust: mapTrustToTrustLevel(trust)\n  });\n}\nexport function mapTrustToTrustLevel(trust) {\n  switch (trust) {\n    case 'LOW':\n      return TrustLevel.LOW;\n\n    case 'MEDIUM':\n      return TrustLevel.MEDIUM;\n\n    case 'HIGH':\n      return TrustLevel.HIGH;\n\n    default:\n      throw new Error(\"Bad trust from server\");\n  }\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/sagas/mappers.ts"],"names":["TrustLevel","mapSearchToRedux","searchObj","mapSimilarProductsToRedux","positions","map","item","imageSrc","productImageSrc","isProtectedDeal","protectedDeal","trust","mapTrustToTrustLevel","mapProductToRedux","rest","LOW","MEDIUM","HIGH","Error"],"mappings":";;AAAA,SAAyDA,UAAzD,QAA2E,gBAA3E;AAGA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAA0C;AAC7C,SAAOA,SAAP;AACH;AAED,OAAO,SAASC,yBAAT,CAAmCC,SAAnC,EAAwF;AAC3F,SAAOA,SAAS,CAACC,GAAV,CAAcC,IAAI,sBAClBA,IADkB;AAErBC,IAAAA,QAAQ,EAAED,IAAI,CAACE,eAFM;AAGrBC,IAAAA,eAAe,EAAEH,IAAI,CAACI,aAHD;AAIrBC,IAAAA,KAAK,EAAEC,oBAAoB,CAACN,IAAI,CAACK,KAAN;AAJN,IAAlB,CAAP;AAMH;AAED,OAAO,SAASE,iBAAT,OAIsB;AAAA,MAHzBF,KAGyB,QAHzBA,KAGyB;AAAA,MAFzBD,aAEyB,QAFzBA,aAEyB;AAAA,MADtBI,IACsB;;AACzB,2BACOA,IADP;AAEIL,IAAAA,eAAe,EAAEC,aAFrB;AAGIC,IAAAA,KAAK,EAAEC,oBAAoB,CAACD,KAAD;AAH/B;AAKH;AAED,OAAO,SAASC,oBAAT,CAA8BD,KAA9B,EAA0D;AAC7D,UAAQA,KAAR;AACI,SAAK,KAAL;AACI,aAAOX,UAAU,CAACe,GAAlB;;AACJ,SAAK,QAAL;AACI,aAAOf,UAAU,CAACgB,MAAlB;;AACJ,SAAK,MAAL;AACI,aAAOhB,UAAU,CAACiB,IAAlB;;AACJ;AACI,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AARR;AAUH","sourcesContent":["import { ResponseProductDTO, ResponseSimilarProductsDTO, TrustLevel } from '../dto/Product'\n\n\nexport function mapSearchToRedux(searchObj: any) {\n    return searchObj\n}\n\nexport function mapSimilarProductsToRedux(positions : ResponseSimilarProductsDTO['positions']) {\n    return positions.map(item => ({\n        ...item,\n        imageSrc: item.productImageSrc,\n        isProtectedDeal: item.protectedDeal,\n        trust: mapTrustToTrustLevel(item.trust)\n    }))\n}\n\nexport function mapProductToRedux({\n    trust,\n    protectedDeal,\n    ...rest\n}: ResponseProductDTO) : any {\n    return {\n        ...rest,\n        isProtectedDeal: protectedDeal,\n        trust: mapTrustToTrustLevel(trust)\n    }\n}\n\nexport function mapTrustToTrustLevel(trust: string) : TrustLevel {\n    switch (trust) {\n        case 'LOW':\n            return TrustLevel.LOW\n        case 'MEDIUM':\n            return TrustLevel.MEDIUM\n        case 'HIGH':\n            return TrustLevel.HIGH\n        default:\n            throw new Error(\"Bad trust from server\")\n    }\n}"]},"metadata":{},"sourceType":"module"}