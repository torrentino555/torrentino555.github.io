{"ast":null,"code":"import _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { call } from 'redux-saga/effects';\nimport * as api from '../api';\nimport { assertResponse } from '../errorHandling';\nimport * as actions from '../actions';\nimport { mapSearchToRedux } from './mappers';\nexport function* searching({\n  payload: query\n}) {\n  try {\n    const response = yield call(api.getSearch, query);\n    assertResponse(response);\n    yield call(actions.searching.success, _objectSpread({}, mapSearchToRedux(response.data)));\n  } catch (_ref) {\n    let message = _ref.message;\n    yield call(actions.errorHandle.occur, message);\n  }\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/sagas/search.ts"],"names":["call","api","assertResponse","actions","mapSearchToRedux","searching","payload","query","response","getSearch","success","data","message","errorHandle","occur"],"mappings":";AAAA,SAASA,IAAT,QAAqB,oBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAGA,OAAO,UAAWC,SAAX,CAAqB;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAArB,EAA8C;AACjD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACC,GAAG,CAACQ,SAAL,EAAgBF,KAAhB,CAA3B;AAEAL,IAAAA,cAAc,CAACM,QAAD,CAAd;AAEA,UAAMR,IAAI,CAACG,OAAO,CAACE,SAAR,CAAkBK,OAAnB,oBAAiCN,gBAAgB,CAACI,QAAQ,CAACG,IAAV,CAAjD,EAAV;AACH,GAND,CAME,aAAoB;AAAA,QAAXC,OAAW,QAAXA,OAAW;AAClB,UAAMZ,IAAI,CAACG,OAAO,CAACU,WAAR,CAAoBC,KAArB,EAA4BF,OAA5B,CAAV;AACH;AACJ","sourcesContent":["import { call } from 'redux-saga/effects'\nimport * as api from '../api'\nimport { assertResponse } from '../errorHandling'\nimport * as actions from '../actions'\nimport { mapSearchToRedux } from './mappers'\n\n\nexport function * searching({ payload: query }: any) {\n    try {\n        const response = yield call(api.getSearch, query)\n\n        assertResponse(response)\n\n        yield call(actions.searching.success, { ...mapSearchToRedux(response.data) })\n    } catch ({ message }) {\n        yield call(actions.errorHandle.occur, message)\n    }\n}"]},"metadata":{},"sourceType":"module"}