{"ast":null,"code":"import _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport * as reducers from './reducers';\nimport rootSaga from './sagas';\nimport { wrap } from './actions';\nexport const history = createBrowserHistory();\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst createRootReducer = history => combineReducers(_objectSpread({\n  router: connectRouter(history)\n}, reducers));\n\nexport default function configureStore(preloadedState) {\n  const store = wrap(createStore(createRootReducer(history), preloadedState, composeEnhancers(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  sagaMiddleware))));\n  sagaMiddleware.run(rootSaga);\n  return {\n    store\n  };\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/configureStore.ts"],"names":["createBrowserHistory","applyMiddleware","createStore","combineReducers","routerMiddleware","connectRouter","composeWithDevTools","createSagaMiddleware","reducers","rootSaga","wrap","history","composeEnhancers","sagaMiddleware","createRootReducer","router","configureStore","preloadedState","store","run"],"mappings":";AAAA,SAASA,oBAAT,QAA8C,SAA9C;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA2E,OAA3E;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,wBAAhD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,IAAT,QAAqB,WAArB;AAGA,OAAO,MAAMC,OAAO,GAAGX,oBAAoB,EAApC;AACP,MAAMY,gBAAgB,GAAGN,mBAAmB,CAAC,EAAD,CAA5C;AACA,MAAMO,cAAc,GAAGN,oBAAoB,EAA3C;;AAEA,MAAMO,iBAAiB,GAAIH,OAAD,IAAsBR,eAAe;AAC3DY,EAAAA,MAAM,EAAEV,aAAa,CAACM,OAAD;AADsC,GAExDH,QAFwD,EAA/D;;AAKA,eAAe,SAASQ,cAAT,CAAwBC,cAAxB,EAA8D;AACzE,QAAMC,KAAK,GAAGR,IAAI,CAACR,WAAW,CAC1BY,iBAAiB,CAACH,OAAD,CADS,EAE1BM,cAF0B,EAG1BL,gBAAgB,CACZX,eAAe,CACXG,gBAAgB,CAACO,OAAD,CADL,EACgB;AAC3BE,EAAAA,cAFW,CADH,CAHU,CAAZ,CAAlB;AAWAA,EAAAA,cAAc,CAACM,GAAf,CAAmBV,QAAnB;AAEA,SAAO;AAAES,IAAAA;AAAF,GAAP;AACH","sourcesContent":["import { createBrowserHistory, History } from 'history'\nimport { applyMiddleware, createStore, combineReducers, DeepPartial } from 'redux'\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport * as reducers from './reducers'\nimport { State } from './reducers'\nimport rootSaga from './sagas'\nimport { wrap } from './actions'\n\n\nexport const history = createBrowserHistory()\nconst composeEnhancers = composeWithDevTools({})\nconst sagaMiddleware = createSagaMiddleware()\n\nconst createRootReducer = (history: History) => combineReducers<any>({\n    router: connectRouter(history),\n    ...reducers\n})\n\nexport default function configureStore(preloadedState? : DeepPartial<State>) {\n    const store = wrap(createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancers(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                sagaMiddleware\n            )\n        )\n    ))\n\n    sagaMiddleware.run(rootSaga)\n\n    return { store }\n}"]},"metadata":{},"sourceType":"module"}