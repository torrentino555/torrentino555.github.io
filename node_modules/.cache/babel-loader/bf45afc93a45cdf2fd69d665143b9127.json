{"ast":null,"code":"import _slicedToArray from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/olof/sata-hakaton/front/src/common/Header/Header.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './Header.css';\nimport Button from '../Button';\nimport { empty } from '../../utils';\nimport { UploadFile } from '../../pages/UploadFile';\nimport { Routes } from '../../routing';\nimport { useSelector } from 'react-redux';\nimport { selectLocation } from '../../selectors/routes';\nimport queryString from 'query-string';\nimport { isNil } from 'ramda';\nexport default function Header() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInFocus = _useState2[0],\n        setSearchInFocus = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        uploadIsOpen = _useState4[0],\n        setUploadIsOpen = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  const location = useSelector(selectLocation);\n  const parsedParams = queryString.parse(location.search);\n  const q = parsedParams.q;\n  useEffect(() => {\n    if (location.pathname.indexOf('search') !== -1 && !isNil(q) && q !== '' && typeof q === 'string') {\n      setQuery(q);\n    }\n  }, [location.pathname, q]);\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__left-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    onFocus: () => setSearchInFocus(true),\n    onBlur: () => setSearchInFocus(false),\n    className: cn(\"header__search\", searchInFocus && \"header__search_focus\"),\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n    onKeyDown: event => {\n      if (event.key === 'Enter' && query !== '') {\n        window.location.href = Routes.SEARCH + '?q=' + query;\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: cn('header__buttons', searchInFocus && 'header__buttons_hide'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(RedButton, {\n    text: 'Загрузить отчёт',\n    onClick: () => setUploadIsOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(RedButton, {\n    text: 'продавай с нами',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(RedButton, {\n    text: 'интернет-банк',\n    className: \"header-red-button__with-arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"header__user-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__user-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u0418\\u041F \\u0422\\u0415\\u0421\\u041B\\u0410\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), \"\\u0418\\u043B\\u043E\\u043D \\u041C\\u0430\\u0441\\u043A\\u043E\\u0432\\u0438\\u0447\"), React.createElement(\"div\", {\n    className: \"header__user-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"header__user-back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon header__user-back-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"\\u0412\\u044B\\u0439\\u0442\\u0438\"))), React.createElement(UploadFile, {\n    isOpen: uploadIsOpen,\n    onClose: () => setUploadIsOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nfunction RedButton({\n  text,\n  onClick = empty,\n  className\n}) {\n  return React.createElement(Button, {\n    className: cn('header-red-button', className),\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, text);\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/common/Header/Header.tsx"],"names":["React","useEffect","useState","cn","Button","empty","UploadFile","Routes","useSelector","selectLocation","queryString","isNil","Header","searchInFocus","setSearchInFocus","uploadIsOpen","setUploadIsOpen","query","setQuery","location","parsedParams","parse","search","q","pathname","indexOf","event","target","value","key","window","href","SEARCH","RedButton","text","onClick","className"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport cn from 'classnames'\n\nimport './Header.css'\nimport Button from '../Button'\nimport { empty } from '../../utils'\nimport { UploadFile } from '../../pages/UploadFile'\nimport { searching } from '../../actions'\nimport { push } from 'connected-react-router'\nimport { Routes } from '../../routing'\nimport { useSelector } from 'react-redux'\nimport { selectLocation } from '../../selectors/routes'\nimport queryString from 'query-string'\nimport { isNil } from 'ramda'\n\n\nexport default function Header() {\n    const [ searchInFocus, setSearchInFocus ] = useState(false)\n    const [ uploadIsOpen, setUploadIsOpen ] = useState(false)\n    const [ query, setQuery ] = useState<string>('')\n    const location = useSelector(selectLocation)\n\n    const parsedParams = queryString.parse(location.search)\n    const { q } = parsedParams\n\n    useEffect(() => {\n        if (location.pathname.indexOf('search') !== -1 && !isNil(q) && q !== '' && typeof q === 'string') {\n            setQuery(q)\n        }\n    }, [ location.pathname, q ])\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__center\">\n                <div className=\"header__left-panel\">\n                    <div className=\"header__logo\" />\n                    <input\n                        value={ query }\n                        onChange={ event => setQuery(event.target.value) }\n                        onFocus={ () => setSearchInFocus(true) }\n                        onBlur={ () => setSearchInFocus(false)}\n                        className={cn(\"header__search\", searchInFocus && \"header__search_focus\")}\n                        placeholder=\"Поиск\"\n                        onKeyDown={ event => {\n                            if (event.key === 'Enter' && query !== '') {\n                                window.location.href = Routes.SEARCH + '?q=' + query\n                            }\n                        } }\n                    />\n                    <div className={cn('header__buttons', searchInFocus && 'header__buttons_hide')}>\n                        <RedButton\n                            text={ 'Загрузить отчёт' }\n                            onClick={ () => setUploadIsOpen(true) }\n                        />\n                        <RedButton text={ 'продавай с нами' }/>\n                        <RedButton\n                            text={ 'интернет-банк' }\n                            className=\"header-red-button__with-arrow\"\n                        />\n                    </div>\n                </div>\n                <div className=\"header__user-container\">\n                    <div className=\"header__user-text\">\n                        ИП ТЕСЛА<br/>\n                        Илон Маскович\n                    </div>\n                    <div className=\"header__user-circle\" />\n                    <div className=\"header__user-back\">\n                        <div className=\"icon header__user-back-icon\" />\n                        Выйти\n                    </div>\n                </div>\n            </div>\n            <UploadFile isOpen={ uploadIsOpen } onClose={ () => setUploadIsOpen(false) } />\n        </div>\n    )\n}\n\ninterface RedButtonProps {\n    text: string\n    onClick?: any\n    className?: any\n}\n\nfunction RedButton({ text, onClick = empty, className } : RedButtonProps) {\n    return (\n        <Button\n            className={cn('header-red-button', className)}\n            onClick={ onClick }>\n            { text }\n        </Button>\n    )\n}"]},"metadata":{},"sourceType":"module"}