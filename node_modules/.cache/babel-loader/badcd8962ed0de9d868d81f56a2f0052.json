{"ast":null,"code":"import _slicedToArray from \"/home/olof/sata-hakaton/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/olof/sata-hakaton/src/pages/UploadFile/UploadFile.tsx\";\nimport React, { useState, Fragment } from 'react';\nimport { Redirect } from 'react-router';\nimport cn from 'classnames';\nimport './UploadFile.css';\nimport { Routes } from '../../routing';\nimport Modal from '../../common/Modal';\nimport SuccessLoadingAnimation from './SuccessLoadingAnimation';\nexport default function UploadFile({\n  isOpen,\n  onClose\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        needRedirect = _useState2[0],\n        setNeedRedirect = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startAnimation = _useState4[0],\n        setStartAnimation = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        successAnimation = _useState6[0],\n        setSuccessAnimation = _useState6[1];\n\n  if (needRedirect) {\n    return React.createElement(Redirect, {\n      to: Routes.PRODUCTS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Modal, {\n    closeOnDocumentClick: true,\n    closeOnEscape: true,\n    isOpen: isOpen,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"upload-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, successAnimation ? React.createElement(SuccessLoadingAnimation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0451\\u0442 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0439 \\u0432\\u044B\\u0433\\u043E\\u0434\\u044B\", React.createElement(\"label\", {\n    className: cn(\"icon upload-file__label\", startAnimation && 'upload-file__label_hide'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"upload-file__input\",\n    type: \"file\",\n    placeholder: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\",\n    onChange: onUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))));\n\n  function onUpload() {\n    setStartAnimation(true);\n    setTimeout(() => {\n      setSuccessAnimation(true);\n    }, 1000);\n    setTimeout(() => {\n      setNeedRedirect(true);\n      onClose();\n    }, 4000);\n  }\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/src/pages/UploadFile/UploadFile.tsx"],"names":["React","useState","Fragment","Redirect","cn","Routes","Modal","SuccessLoadingAnimation","UploadFile","isOpen","onClose","needRedirect","setNeedRedirect","startAnimation","setStartAnimation","successAnimation","setSuccessAnimation","PRODUCTS","onUpload","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,kBAAP;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAOA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAApB,EAA2D;AAAA,oBAC5BT,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,QAC9DU,YAD8D;AAAA,QAChDC,eADgD;;AAAA,qBAExBX,QAAQ,CAAC,KAAD,CAFgB;AAAA;AAAA,QAE9DY,cAF8D;AAAA,QAE9CC,iBAF8C;;AAAA,qBAGpBb,QAAQ,CAAC,KAAD,CAHY;AAAA;AAAA,QAG9Dc,gBAH8D;AAAA,QAG5CC,mBAH4C;;AAKtE,MAAIL,YAAJ,EAAkB;AACd,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAGN,MAAM,CAACY,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,oBAAC,KAAD;AACI,IAAA,oBAAoB,EAAG,IAD3B;AAEI,IAAA,aAAa,EAAG,IAFpB;AAGI,IAAA,MAAM,EAAGR,MAHb;AAII,IAAA,OAAO,EAAGC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,gBAAgB,GACZ,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wPAEI;AAAO,IAAA,SAAS,EAAEX,EAAE,CAAC,yBAAD,EAA4BS,cAAc,IAAI,yBAA9C,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iFAHhB;AAII,IAAA,QAAQ,EAAGK,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CALZ,CANJ,CADJ;;AA6BA,WAASA,QAAT,GAAoB;AAChBJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAK,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,KAFS,EAEP,IAFO,CAAV;AAGAG,IAAAA,UAAU,CAAC,MAAM;AACbP,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,OAAO;AACV,KAHS,EAGP,IAHO,CAAV;AAIH;AACJ","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport { Redirect } from 'react-router'\nimport cn from 'classnames'\n\nimport './UploadFile.css'\nimport { Routes } from '../../routing'\nimport Modal from '../../common/Modal'\nimport SuccessLoadingAnimation from './SuccessLoadingAnimation'\n\ninterface UploadFileProps {\n    isOpen: boolean\n    onClose: any\n}\n\nexport default function UploadFile({ isOpen, onClose } : UploadFileProps) {\n    const [ needRedirect, setNeedRedirect ] = useState(false)\n    const [ startAnimation, setStartAnimation ] = useState(false)\n    const [ successAnimation, setSuccessAnimation ] = useState(false)\n\n    if (needRedirect) {\n        return <Redirect to={ Routes.PRODUCTS } />\n    }\n\n    return (\n        <Modal\n            closeOnDocumentClick={ true }\n            closeOnEscape={ true }\n            isOpen={ isOpen }\n            onClose={ onClose }\n        >\n            <div className=\"upload-file\">\n                {\n                    successAnimation ? (\n                        <SuccessLoadingAnimation />\n                    ) : (\n                        <Fragment>\n                            Загрузить отчёт для анализа возможной выгоды\n                            <label className={cn(\"icon upload-file__label\", startAnimation && 'upload-file__label_hide')}>\n                                <input\n                                    className=\"upload-file__input\"\n                                    type=\"file\"\n                                    placeholder=\"Загрузите файл\"\n                                    onChange={ onUpload }\n                                />\n                            </label>\n                        </Fragment>\n                    )\n                }\n            </div>\n        </Modal>\n    )\n\n    function onUpload() {\n        setStartAnimation(true)\n        setTimeout(() => {\n            setSuccessAnimation(true)\n        }, 1000)\n        setTimeout(() => {\n            setNeedRedirect(true)\n            onClose()\n        }, 4000)\n    }\n}"]},"metadata":{},"sourceType":"module"}