{"ast":null,"code":"import _slicedToArray from \"/home/olof/sata-hakaton/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/olof/sata-hakaton/src/pages/Product/Cart.tsx\";\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport { ReactComponent as HeartIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/icons/heart.svg\";\nimport { ReactComponent as HeartRedIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/icons/heart-red.svg\";\nimport './Cart.css';\nimport Button from '../../common/Button';\nimport { useSelector } from 'react-redux';\nimport { getWordWithNumberInRightCase, numberWithSpaces } from '../../utils';\nimport { isNil } from 'ramda';\n\nfunction Cart() {\n  const _useSelector = useSelector(state => state.product),\n        isProtectedDeal = _useSelector.isProtectedDeal,\n        bookmarks = _useSelector.bookmarks,\n        description = _useSelector.description,\n        productName = _useSelector.productName,\n        organizationName = _useSelector.organizationName,\n        clientCount = _useSelector.clientCount,\n        trust = _useSelector.trust,\n        price = _useSelector.price;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isFull = _useState2[0],\n        setIsFull = _useState2[1]; // TODO: добавить взятие старой цены из url\n\n\n  const lastPrice = null;\n  return React.createElement(\"div\", {\n    className: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: cn(\"cart__content\", !isFull && 'cart__content_hidden'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__content-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, organizationName)), React.createElement(\"div\", {\n    className: \"cart__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, productName), bookmarks ? React.createElement(\"div\", {\n    className: \"cart__my-marks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(HeartRedIcon, {\n    className: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u0412 \\u0437\\u0430\\u043A\\u043B\\u0430\\u0434\\u043A\\u0430\\u0445\")) : React.createElement(\"div\", {\n    className: \"cart__add-marks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(HeartIcon, {\n    className: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0437\\u0430\\u043A\\u043B\\u0430\\u0434\\u043A\\u0438\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, description), React.createElement(\"div\", {\n    onClick: () => setIsFull(!isFull),\n    className: \"cart__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, isFull ? 'Скрыть' : 'Полное описание'), React.createElement(\"div\", {\n    className: \"cart__prices\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__price-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !isNil(lastPrice) && numberWithSpaces(lastPrice) + ' ₽'), React.createElement(\"div\", {\n    className: \"cart__price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, !isNil(price) && numberWithSpaces(price) + ' ₽'))), React.createElement(\"div\", {\n    className: \"cart__right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, !isNil(clientCount) && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, clientCount + ' ' + getWordWithNumberInRightCase(clientCount, ['клиент', 'клиента', 'клиентов'])), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, isProtectedDeal ? 'Без риска' : 'Есть риски'), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, trust)), React.createElement(\"div\", {\n    className: \"cart__buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {// TODO:\n    },\n    className: \"cart__submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C\"), React.createElement(Button, {\n    onClick: () => {// TODO:\n    },\n    className: \"cart__request\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\")))));\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/olof/sata-hakaton/src/pages/Product/Cart.tsx"],"names":["React","useState","cn","Button","useSelector","getWordWithNumberInRightCase","numberWithSpaces","isNil","Cart","state","product","isProtectedDeal","bookmarks","description","productName","organizationName","clientCount","trust","price","isFull","setIsFull","lastPrice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport cn from 'classnames'\n\nimport { ReactComponent as HeartIcon } from '../../images/icons/heart.svg'\nimport { ReactComponent as HeartRedIcon } from '../../images/icons/heart-red.svg'\n\nimport './Cart.css'\nimport Button from '../../common/Button'\nimport { useSelector } from 'react-redux'\nimport { State } from '../../reducers'\nimport { getWordWithNumberInRightCase, numberWithSpaces } from '../../utils'\nimport { isNil } from 'ramda'\n\nfunction Cart() {\n    const {\n        isProtectedDeal,\n        bookmarks,\n        description,\n        productName,\n        organizationName,\n        clientCount,\n        trust,\n        price\n    } = useSelector<State, State['product']>(state => state.product)\n\n    const [ isFull, setIsFull ] = useState(true)\n    // TODO: добавить взятие старой цены из url\n    const lastPrice = null\n\n    return (\n        <div className=\"cart\">\n            <div className={cn(\"cart__content\", !isFull && 'cart__content_hidden')}>\n                <div className=\"cart__content-header\">\n                    <div>{ organizationName }</div>\n                </div>\n                <div className=\"cart__title\">\n                    { productName }\n                </div>\n                {\n                    bookmarks ? (\n                        <div className=\"cart__my-marks\">\n                            <HeartRedIcon className=\"heart\"/>\n                            <div>В закладках</div>\n                        </div>\n                    ) : (\n                        <div className=\"cart__add-marks\">\n                            <HeartIcon className=\"heart\"/>\n                            <div>Добавить в закладки</div>\n                        </div>\n                    )\n                }\n                <div>{ description }</div>\n                <div onClick={ () => setIsFull(!isFull) } className=\"cart__description\">{ isFull ? ('Скрыть') : ('Полное описание') }</div>\n                <div className=\"cart__prices\">\n                    <div className=\"cart__price-line\">{ !isNil(lastPrice) && (numberWithSpaces(lastPrice) + ' ₽') }</div>\n                    <div className=\"cart__price\">{ !isNil(price) && (numberWithSpaces(price) + ' ₽') }</div>\n                </div>\n            </div>\n            <div className=\"cart__right\">\n                <div className=\"cart__actions\">\n                    <div className=\"cart__options\">\n                        {\n                            !isNil(clientCount) && (\n                                <div>\n                                    { clientCount + ' ' + getWordWithNumberInRightCase(clientCount, [ 'клиент', 'клиента', 'клиентов' ]) }\n                                </div>\n                            )\n                        }\n                        <div>{ isProtectedDeal ? 'Без риска' : 'Есть риски' }</div>\n                        <div>{ trust }</div>\n                    </div>\n                    <div className=\"cart__buttons\">\n                        <Button onClick={ () => {\n                            // TODO:\n                        } } className=\"cart__submit\">\n                            Оформить\n                        </Button>\n                        <Button onClick={ () => {\n                            // TODO:\n                        } } className=\"cart__request\">\n                            Запросить\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart"]},"metadata":{},"sourceType":"module"}