{"ast":null,"code":"import _objectSpread from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { call } from 'redux-saga/effects';\nimport * as api from '../api';\nimport * as actions from '../actions';\nimport { assertResponse } from '../errorHandling';\nimport { mapProductToRedux, mapSimilarProductsToRedux } from './mappers';\nexport function* productInitialized({\n  payload: positionId\n}) {\n  try {\n    const response = yield call(api.getProduct, {\n      positionId\n    });\n    assertResponse(response);\n    const similarProducts = yield call(api.getSimilarProductOffers, {\n      positionId\n    });\n    assertResponse(similarProducts);\n    console.log(similarProducts);\n    yield call(actions.productInitialized.success, _objectSpread({}, mapProductToRedux(response.data), {\n      similarProducts: mapSimilarProductsToRedux(similarProducts.data)\n    }));\n  } catch (_ref) {\n    let message = _ref.message;\n    yield call(actions.errorHandle.occur, message);\n  } finally {}\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/sagas/product.ts"],"names":["call","api","actions","assertResponse","mapProductToRedux","mapSimilarProductsToRedux","productInitialized","payload","positionId","response","getProduct","similarProducts","getSimilarProductOffers","console","log","success","data","message","errorHandle","occur"],"mappings":";AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,iBAAT,EAA4BC,yBAA5B,QAA6D,WAA7D;AAGA,OAAO,UAAWC,kBAAX,CAA8B;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAA9B,EAA4D;AAC/D,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACC,GAAG,CAACS,UAAL,EAAiB;AAAEF,MAAAA;AAAF,KAAjB,CAA3B;AAEAL,IAAAA,cAAc,CAACM,QAAD,CAAd;AAEA,UAAME,eAAe,GAAG,MAAMX,IAAI,CAACC,GAAG,CAACW,uBAAL,EAA+B;AAAEJ,MAAAA;AAAF,KAA/B,CAAlC;AAEAL,IAAAA,cAAc,CAACQ,eAAD,CAAd;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AAEA,UAAMX,IAAI,CAACE,OAAO,CAACI,kBAAR,CAA2BS,OAA5B,oBACHX,iBAAiB,CAACK,QAAQ,CAACO,IAAV,CADd;AAENL,MAAAA,eAAe,EAAEN,yBAAyB,CAACM,eAAe,CAACK,IAAjB;AAFpC,OAAV;AAGH,GAdD,CAcE,aAAoB;AAAA,QAAXC,OAAW,QAAXA,OAAW;AAClB,UAAMjB,IAAI,CAACE,OAAO,CAACgB,WAAR,CAAoBC,KAArB,EAA4BF,OAA5B,CAAV;AACH,GAhBD,SAgBU,CACT;AACJ","sourcesContent":["import { call } from 'redux-saga/effects'\n\nimport * as api from '../api'\nimport * as actions from '../actions'\nimport { assertResponse } from '../errorHandling'\nimport { mapProductToRedux, mapSimilarProductsToRedux } from './mappers'\n\n\nexport function * productInitialized({ payload: positionId }: any) {\n    try {\n        const response = yield call(api.getProduct, { positionId })\n\n        assertResponse(response)\n\n        const similarProducts = yield call(api.getSimilarProductOffers,  { positionId })\n\n        assertResponse(similarProducts)\n\n        console.log(similarProducts)\n\n        yield call(actions.productInitialized.success, {\n            ...mapProductToRedux(response.data),\n            similarProducts: mapSimilarProductsToRedux(similarProducts.data) })\n    } catch ({ message }) {\n        yield call(actions.errorHandle.occur, message)\n    } finally {\n    }\n}"]},"metadata":{},"sourceType":"module"}