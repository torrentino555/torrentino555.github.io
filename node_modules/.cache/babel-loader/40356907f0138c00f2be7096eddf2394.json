{"ast":null,"code":"import _slicedToArray from \"/home/olof/sata-hakaton/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/olof/sata-hakaton/front/src/pages/Products/CompanyGroup/CompanyGroup.tsx\";\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport { isNil, min } from 'ramda';\nimport './CompanyGroup.css';\nimport Stars from '../../../common/Starts';\nimport { numberWithSpaces } from '../../../utils';\nimport { TrustLevel } from '../../../dto/Product';\nimport { NavLink } from 'react-router-dom';\nexport default function CompanyGroup({\n  title,\n  companies,\n  price\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isActive = _useState2[0],\n        setIsActive = _useState2[1];\n\n  const allPrices = companies.map(i => i.price);\n  const minPrice = !isNil(allPrices) && allPrices.length > 0 ? allPrices.reduce(min) : null;\n  const isViewMinPrice = !isNil(minPrice) && (!price || price && price > minPrice);\n  return React.createElement(\"div\", {\n    className: cn('company-group', isActive && 'company-group_active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"company-group__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, title, isViewMinPrice && React.createElement(\"span\", {\n    className: \"company-group__better-offer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\u043B\\u0443\\u0447\\u0448\\u0435\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\", React.createElement(\"span\", {\n    className: \"company-group__better-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, numberWithSpaces(minPrice), \" \\u20BD\"))), React.createElement(\"div\", {\n    className: cn(\"company-group__list\", isActive && 'company-group__list_active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, companies.map(company => React.createElement(Company, {\n    company: company,\n    key: company.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), companies.length > 0 && React.createElement(\"div\", {\n    className: \"company-group__spoiler\",\n    onClick: () => setIsActive(!isActive),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, isActive ? 'Меньше' : 'Больше'));\n}\n\nfunction Company({\n  company\n}) {\n  const name = company.name,\n        price = company.price,\n        score = company.score;\n  return React.createElement(\"div\", {\n    className: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    className: \"offer__name\",\n    to: '/product/' + company.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" \", name, \" \"), React.createElement(Stars, {\n    score: score,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"company__price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, numberWithSpaces(price)), React.createElement(\"div\", {\n    className: \"company__location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\"), React.createElement(\"div\", {\n    className: \"company__location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, TrustLevel.HIGH));\n}","map":{"version":3,"sources":["/home/olof/sata-hakaton/front/src/pages/Products/CompanyGroup/CompanyGroup.tsx"],"names":["React","useState","cn","isNil","min","Stars","numberWithSpaces","TrustLevel","NavLink","CompanyGroup","title","companies","price","isActive","setIsActive","allPrices","map","i","minPrice","length","reduce","isViewMinPrice","company","id","Company","name","score","HIGH"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport cn from 'classnames'\nimport {isNil, min} from 'ramda'\n\nimport './CompanyGroup.css'\nimport Stars from '../../../common/Starts'\nimport { numberWithSpaces } from '../../../utils'\nimport { TrustLevel} from '../../../dto/Product'\nimport {ICompany} from '../../../selectors/search'\nimport {NavLink} from 'react-router-dom'\n\ninterface Props {\n    title: string\n    companies: ICompany[]\n    price?: number\n}\n\nexport default function CompanyGroup({title, companies, price}: Props) {\n    const [ isActive, setIsActive ] = useState(false)\n\n    const allPrices = companies.map((i) => i.price)\n    const minPrice = !isNil(allPrices) && allPrices.length > 0 ? allPrices.reduce(min) : null\n    const isViewMinPrice = !isNil(minPrice) && (!price || (price && price > minPrice))\n    return (\n        <div className={ cn('company-group', isActive && 'company-group_active') }>\n            <div className=\"company-group__title\">\n                {title}\n                {isViewMinPrice && (\n                    <span className=\"company-group__better-offer\">\n                        лучшее предложение\n                        <span className=\"company-group__better-price\">{numberWithSpaces(minPrice!)} ₽</span>\n                    </span>)\n                }\n            </div>\n            <div className={cn(\"company-group__list\", isActive && 'company-group__list_active')}>\n                {companies.map((company) => (\n                    <Company company={company} key={company.id}/>\n                ))}\n            </div>\n            { companies.length > 0 && (\n                <div className=\"company-group__spoiler\" onClick={ () => setIsActive(!isActive) }>\n                    {isActive ? 'Меньше' : 'Больше'}\n                </div>\n            )}\n        </div>\n    )\n}\n\nfunction Company({company}: {company: ICompany}) {\n    const {name, price, score} = company\n    return (\n        <div className=\"company\">\n            <NavLink className=\"offer__name\" to={'/product/' + company.id }> {name} </NavLink>\n            <Stars score={score}/>\n            <div className=\"company__price\">{numberWithSpaces(price)}</div>\n            <div className=\"company__location\">Москва</div>\n            <div className=\"company__location\">{ TrustLevel.HIGH }</div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}